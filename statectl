#!/bin/sh

ACTION="$1"
MODIFIER="$2"

CONFIG_DIR="${XDG_CONFIG_DIR:-$HOME/.config}/statectl"

fail() {
	echo "$1"
	exit 1
}

execute_action() {
	echo "$1" > /sys/power/state || fail "Failed to $ACTION."
}

action_hibernate() {
	grep -q disk /sys/power/state || fail "Hibernate is not enabled on your machine."
	[ -f "$CONFIG_DIR/hibernate_mode" ] && cat "$CONFIG_DIR/hibernate_mode" > /sys/power/disk
	# TODO: suspend then hibernate with parameter will cause an error here
	[ "$MODIFIER" ] && echo "$MODIFIER" > /sys/power/disk
	execute_action disk
}

action_poweroff() {
	# TODO: make more sophisticated
	shutdown
}

action_reboot() {
	reboot
}

action_standby() {
	execute_action freeze
}

action_suspend() {
	grep -q mem /sys/power/state || fail "Suspend is not enabled on your machine."
	execute_action mem
}

action_suspend_then_hibernate() {
	# TODO: clean up, this can surely be made more succint
	HIBERNATE_AFTER="30 minutes"
	[ -f "$CONFIG_DIR/hibernate_after" ] && HIBERNATE_AFTER=$(cat "$CONFIG_DIR"/hibernate_after)
	[ "$MODIFIER" ] && HIBERNATE_AFTER="$MODIFIER"

	# TODO: check for RTC rather than just assume
	local HIBERNATE_AFTER_TIMESTAMP=$(date '+%s' -d "+ $HIBERNATE_AFTER")
	echo 0 > /sys/class/rtc/rtc0/wakealarm
	echo "$HIBERNATE_AFTER_TIMESTAMP" > /sys/class/rtc/rtc0/wakealarm

	action_suspend
	[ "$(date '+%s')" -ge "$HIBERNATE_AFTER_TIMESTAMP" ] && action_hibernate
	echo 0 > /sys/class/rtc/rtc0/wakealarm
}

# main
test -w /sys/power/state || fail "You have insufficient permissions to run this script."

case "$ACTION" in
	"hibernate" | "poweroff" | "reboot" | "standby" | "suspend" | "suspend_then_hibernate" )
		eval "action_$ACTION"
		;;
	* )
		echo "$ACTION is not a supported action."
		printf "Supported actions are:\n\t- hibernate\n\t- poweroff\n\t- reboot\n\t- suspend\n\t- suspend_then_hibernate\n"
		;;
esac
